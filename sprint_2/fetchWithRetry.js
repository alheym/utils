// Fetch с подсчётом попыток
// Бывает так, что сервер отвечает на запрос ошибкой. Иногда это сделано намеренно, а значит  нужно несколько раз попытаться получить ответ.
// Используя свою реализацию Fetch из предыдущей задачи, напишите функцию, которая:
// делает запрос по URL, который получила в аргументе;
// если получает ошибку — пробует совершить запрос ещё раз, и так до тех пор, пока не исчерпает лимит попыток.
// выкидывает ошибку, если не смогла получить данные за переданное в аргументе число попыток;
// если пришёл корректный ответ, вернёт зарезолвленный промис.
// Свойство retries в options— число попыток до ошибки. Это число должно быть больше единицы.
// Переиспользуйте инструмент для запросов из прошлого задания.


function fetchWithRetry(url, options = {}) {
    const { tries = 1 } = options;

    function onError(err) {
        const triesLeft = tries - 1;
        if (!triesLeft) {
            throw err;
        }

        return fetchWithRetry(url, { ...options, tries: triesLeft });
    }

    return fetch(url, options).catch(onError);
}

